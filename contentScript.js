(() => {
  // Global Variables;
  let originalArticle = { url: "", title: "", content: "" };
  let articleData = null;

  chrome.runtime.onMessage.addListener((obj, sender, response) => {
    const { type } = obj;

    switch (type) {
      case "GENERATE":
        generate();
        break;
      case "SHOW_ORIGINAL":
        showOriginal();
        break;
      default:
        break;
    }
  });

  async function generate() {
    // We generate mini rhyme headline and article summary only if we have no record in our database
    if (!articleData) {
      const body = JSON.stringify(originalArticle);

      const response = await fetch(
        "https://news-summariser.onrender.com/api/articles",
        {
          method: "POST",
          headers: {
            "Content-Type": "application",
          },
          body,
        }
      );
      const data = await response.json();

      const { title, summary } = data;

      articleData = data;
      updateUI(title, summary);
    } else updateUI(articleData.title, "");
    chrome.runtime.sendMessage({ type: "COMPLETE" });
  }

  async function findOne(url) {
    const body = JSON.stringify({ url });

    const response = await fetch(
      "https://news-summariser.onrender.com/api/articles/findOne",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body,
      }
    );
    const { data } = await response.json();

    if (!data) return null;
    else return { title: data.title, summary: data.summary };
  }

  async function main() {
    const url = window.location.href;
    const headlineEl = document.querySelector("h1.native_story_title");
    const articleParagraphs = document.querySelectorAll("#pcl-full-content p");

    let article = "";

    articleParagraphs.forEach((paragraph) => {
      article += paragraph.textContent + " ";
    });

    // Populate original article object
    originalArticle.url = url;
    originalArticle.title = headlineEl.textContent;
    originalArticle.content = article;

    const data = await findOne(url);

    if (data) {
      articleData = data;
      updateUI(data.title, data.summary);
      console.log("send show_original type");
      chrome.runtime.sendMessage({ type: "SHOW_ORIGINAL" });
    }
  }

  function showOriginal() {
    const headlineEl = document.querySelector("h1.native_story_title");
    headlineEl.textContent = originalArticle.title;
  }

  function updateUI(title, summary) {
    const headlineEl = document.querySelector("h1.native_story_title");
    const articleParagraphsContainer =
      document.getElementById("pcl-full-content");

    headlineEl.textContent = title;

    console.log(summary.length);

    if (summary.length !== 0) {
      const summaryPTag = document.createElement("p");
      summaryPTag.id = "news-summariser-paragraph";
      summaryPTag.innerHTML = `<span style="font-weight:700">Biased summary generated by News Summariser chrome extension:</span><br/>${summary}`;

      articleParagraphsContainer.appendChild(summaryPTag);
    }
  }

  main();
})();
